#! /bin/bash

NS_DEMO=demo
DOMAIN=$(grep '^remote\.host\.domain=' ../config/domain.properties | cut -d'=' -f2)
DOMAIN_PROPERTY_FILE=../config/domain.properties

MILVUS="https://milvus-milvus.$DOMAIN"
TOKEN="root:Milvus"

DBPOD=`oc get pod --selector=name=postgresql -o name -n $NS_DEMO`
# echo $DBPOD


DB_DELETE_CUSTOMERS="oc exec svc/postgresql -n $NS_DEMO -- psql -d demo -c 'delete from customers;'"
DB_DELETE_INVOICES="oc exec svc/postgresql -n $NS_DEMO -- psql -d demo -c 'delete from invoices;'"
DB_DELETE_PROMOTIONS="oc exec svc/postgresql -n $NS_DEMO -- psql -d demo -c 'delete from promotions;'"
DB_DELETE_AWARDS="oc exec svc/postgresql -n $NS_DEMO -- psql -d demo -c 'delete from awards;'"

CAMEL_START_CLEAN_BUCKETS="camel run --background resources/cleanbuckets.camel.yaml $DOMAIN_PROPERTY_FILE"
CAMEL_STOP_CLEAN_BUCKETS="camel stop cleanbuckets"
CAMEL_START_RESET_BUCKETS="camel run --background resources/resetbuckets.camel.yaml $DOMAIN_PROPERTY_FILE"
CAMEL_STOP_RESET_BUCKETS="camel stop resetbuckets"

CAMEL_START_INGEST="camel run --background --source-dir=../camel/ingest-invoices --properties=$DOMAIN_PROPERTY_FILE --dep=dev.langchain4j:langchain4j-embeddings-all-minilm-l6-v2:0.32.0"
CAMEL_STOP_INGEST="camel stop ingest"


MILVUS_DELETE_ALL=$(cat << 'EOF'
	curl --request POST \
	--url "${MILVUS}/v2/vectordb/entities/delete" \
	--header "Authorization: Bearer ${TOKEN}" \
	--header "Content-Type: application/json" \
	-d '{
	    "collectionName": "mycollection",
    	"filter": "invoice >= 0"
	}'
EOF
)

echo "shutting down camel instances running..."
eval "./agents-down"


# Run camel ps and capture output
output=$(camel ps)

# Check if output is empty
if [ -z "$output" ]; then
    echo "No Camel processes running. Proceeding..."
else
    echo "Warning: Processes are running:"
    echo "$output"
    echo "Script stopped."
    exit 1
fi


eval "$DB_DELETE_CUSTOMERS"
eval "$DB_DELETE_INVOICES"
# eval "$DB_DELETE_PROMOTIONS"
eval "$DB_DELETE_AWARDS"

eval "$MILVUS_DELETE_ALL"

echo ""
echo "Cleaning buckets..."
# eval "$CAMEL_START_CLEAN_BUCKETS"
resources/cleanbuckets

# echo "Stopping cleaning..."
# eval "$CAMEL_STOP_CLEAN_BUCKETS"

echo "Resetting buckets..."
eval "$CAMEL_START_RESET_BUCKETS"

# echo "Stop resetting..."
eval "$CAMEL_STOP_RESET_BUCKETS"

echo "Ingesting invoices..."
eval "$CAMEL_START_INGEST"


echo "Checking for inflight ingest processes..."

while true; do
    # Run camel get inflight ingest and capture output
    output=$(camel get inflight ingest)

    # Check if output is empty
    if [ -z "$output" ]; then
        echo "No inflight ingest processes found. Done."
        break
    else
        echo "Inflight ingest processes still running. Waiting..."
        sleep 5
    fi
done


echo "Stop ingesting..."
eval "$CAMEL_STOP_INGEST"

echo "Resetting LLMs keep-alive..."
curl http://localhost:11434/api/generate -d '{"model": "qwen2.5:3b-instruct", "keep_alive": "2h"}' > /dev/null 2>&1
curl http://localhost:11434/api/generate -d '{"model": "qwen2.5:7b-instruct", "keep_alive": "2h"}' > /dev/null 2>&1
curl http://localhost:11434/api/generate -d '{"model": "qwen2.5:14b-instruct", "keep_alive": "2h"}' > /dev/null 2>&1

echo "All done."
