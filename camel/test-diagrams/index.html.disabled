<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/mermaid@11.6.0/dist/mermaid.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        .header {
            text-align: center;
            margin-bottom: 20px;
        }
        .status-indicator {
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            margin-left: 10px;
        }
        .connected {
            background-color: green;
        }
        .disconnected {
            background-color: red;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #fff;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #e0e7ff;
            color: #333;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:nth-child(odd) {
            background-color: #ffffff;
        }
        .button {
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 5px;
        }
        .approve {
            background-color: #28a745;
            color: white;
        }
        .discard {
            background-color: #dc3545;
            color: white;
        }
        .remove {
            background-color: #6c757d;
            color: white;
        }
        .spinner {
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 2px solid #ccc;
            border-top: 2px solid #333;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            vertical-align: middle;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            z-index: 1000;
            max-width: 80%;
            max-height: 80%;
            overflow: auto;
        }
        .popup-content {
            margin-bottom: 20px;
        }
        .popup-close {
            display: block;
            margin: 0 auto;
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 999;
        }
        .equal-width {
            width: 25%;
        }
        .status-column {
            width: 120px;
        }
        .id-column {
            width: 100px;
        }
        .actions-column {
            width: 200px;
        }
        .details-column {
            width: 150px;
        }
        ul {
            margin: 0;
            padding-left: 20px;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Admin Dashboard <span id="statusIndicator" class="status-indicator disconnected"></span></h1>
    </div>
    <table id="adminTable">
        <thead>
            <tr>
                <th class="id-column">ID</th>
                <th class="equal-width">Summary</th>
                <th class="equal-width">Execution Plan</th>
                <th class="status-column">Status</th>
                <th class="actions-column">Actions</th>
                <th class="details-column">Details</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <div id="overlay" class="overlay"></div>
    <div id="popup" class="popup">
        <h2 id="popupTitle"></h2>
        <div id="popupContent" class="popup-content"></div>
        <button class="popup-close" onclick="closePopup()">Close</button>
    </div>

    <script>
        let ws;
        const tableBody = document.querySelector('#adminTable tbody');
        const statusIndicator = document.getElementById('statusIndicator');

        function connectWebSocket() {
            ws = new WebSocket('ws://localhost:8100');

            ws.onopen = () => {
                statusIndicator.classList.remove('disconnected');
                statusIndicator.classList.add('connected');
            };

            ws.onmessage = (event) => {
                const data = JSON.parse(event.data);
                handleServerEvent(data);
            };

            ws.onclose = () => {
                statusIndicator.classList.remove('connected');
                statusIndicator.classList.add('disconnected');
                setTimeout(connectWebSocket, 1000);
            };

            ws.onerror = () => {
                ws.close();
            };
        }

        function handleServerEvent(data) {
            if (data.executionSummary) {
                updateExecutionSummary(data);
            } else if (data.diagram) {
                updateDiagram(data);
            } else {
                addOrUpdateRow(data);
            }
        }

        function addOrUpdateRow(data) {
            let row = document.querySelector(`tr[data-id="${data.id}"]`);
            if (!row) {
                row = document.createElement('tr');
                row.setAttribute('data-id', data.id);
                row.innerHTML = `
                    <td>${data.id}</td>
                    <td>${data.summary}</td>
                    <td><ul>${data.executionPlan.map(plan => `<li>${plan}</li>`).join('')}</ul></td>
                    <td class="status">Pending Approval</td>
                    <td class="actions">
                        <button class="button approve" onclick="handleAction('${data.id}', 'approve')">Approve</button>
                        <button class="button discard" onclick="handleAction('${data.id}', 'discard')">Discard</button>
                    </td>
                    <td class="details"></td>
                `;
                tableBody.appendChild(row);
            }
        }

        function updateExecutionSummary(data) {
            const row = document.querySelector(`tr[data-id="${data.id}"]`);
            if (row) {
                const statusCell = row.querySelector('.status');
                statusCell.innerHTML = 'Completed';
                const detailsCell = row.querySelector('.details');
                detailsCell.innerHTML = `<a href="#" onclick="showExecutionSummary('${data.id}')">View Summary</a>`;
                row.dataset.executionSummary = JSON.stringify(data.executionSummary).replace(/"/g, '&quot;');
            }
        }

        function updateDiagram(data) {
            const row = document.querySelector(`tr[data-id="${data.id}"]`);
            if (row) {
                const detailsCell = row.querySelector('.details');
                detailsCell.innerHTML += `<br><a href="#" onclick="showDiagram('${data.id}')">View Diagram</a>`;
                row.dataset.diagram = data.diagram;
            }
        }

        function handleAction(id, action) {
            const row = document.querySelector(`tr[data-id="${id}"]`);
            if (!row) return;

            const statusCell = row.querySelector('.status');
            const actionsCell = row.querySelector('.actions');

            if (action === 'discard') {
                statusCell.innerHTML = 'Discarded';
                actionsCell.innerHTML = `<button class="button remove" onclick="handleAction('${id}', 'remove')">Remove</button>`;
            } else if (action === 'approve') {
                statusCell.innerHTML = 'Processing... <span class="spinner"></span>';
                actionsCell.innerHTML = `<button class="button remove" onclick="handleAction('${id}', 'remove')">Remove</button>`;
                ws.send(JSON.stringify({ id, action: 'approve' }));
            } else if (action === 'remove') {
                row.remove();
                ws.send(JSON.stringify({ id, action: 'remove' }));
            }
        }

        function showExecutionSummary(id) {
            const row = document.querySelector(`tr[data-id="${id}"]`);
            if (!row || !row.dataset.executionSummary) return;

            const summary = JSON.parse(row.dataset.executionSummary.replace(/&quot;/g, '"'));
            let content = '<ul>';
            for (const [step, details] of Object.entries(summary)) {
                content += `<li><strong>${step}</strong>: `;
                if (Array.isArray(details)) {
                    content += '<ul>' + details.map(item => `<li>${item}</li>`).join('') + '</ul>';
                } else {
                    content += details;
                }
                content += '</li>';
            }
            content += '</ul>';

            document.getElementById('popupTitle').textContent = 'Execution Summary';
            document.getElementById('popupContent').innerHTML = content;
            showPopup();
        }

        function showDiagram(id) {
            const row = document.querySelector(`tr[data-id="${id}"]`);
            if (!row || !row.dataset.diagram) return;

            const diagramCode = atob(row.dataset.diagram);
            const content = `<div id="mermaidDiagram">${diagramCode}</div>`;

            document.getElementById('popupTitle').textContent = 'Execution Diagram';
            document.getElementById('popupContent').innerHTML = content;


            popup.style.width = '90%';
            popup.style.maxWidth = '1200px';

            showPopup();

            mermaid.init(undefined, document.getElementById('mermaidDiagram'));
        }

        function showPopup() {
            document.getElementById('overlay').style.display = 'block';
            document.getElementById('popup').style.display = 'block';
        }

        function closePopup() {
            document.getElementById('overlay').style.display = 'none';
            document.getElementById('popup').style.display = 'none';
            document.getElementById('popupContent').innerHTML = '';
            
            popup.style.width = '';
            popup.style.maxWidth = '';
        }

        mermaid.initialize({ startOnLoad: false });
        connectWebSocket();
    </script>
</body>
</html>