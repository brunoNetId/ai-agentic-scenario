- route:
    from:
      uri: timer
      parameters:
        delay: "5000"
        period: "1000"
        repeatCount: "1"
        timerName: template
      steps:
        - setBody:
            simple:
              expression: >-
                {
                  "id":"53737787",
                  "diagram": "LS0tCmNvbmZpZzoKICAgIGZsb3djaGFydDoKICAgICAgICBzdWJHcmFwaFRpdGxlTWFyZ2luOgogICAgICAgICAgICBib3R0b206IDQwCi0tLQpncmFwaCBMUgogICAgQVtTdGFydF0gLS0gU3RlcCAwIC0tPiBCCgogICAgc3ViZ3JhcGggQltwbGVhc2UgdGVsbCBtZSB0aGUgdHlwZXMgb2YgcHJvZHVjdHMgaW4gaW52b2ljZSA1MzczNzc4N10KICAgICAgICBkaXJlY3Rpb24gVEIKICAgICAgICBzdWJncmFwaCBCUzFbR3JvdXAgY2FsbHMgMV0KICAgICAgICAgICAgZGlyZWN0aW9uIFRCCiAgICAgICAgICAgIEIxW2dldENhdGVnb3JpZXNPZlByb2R1Y3RzRnJvbUludm9pY2VfY2FsbF9yMXBjcGE4dDogaW52b2ljZWlkOiA1MzczNzc4N10KICAgICAgICAgICAgQjJbY2F0ZWdvcmllcy4wOiBib29rc10KICAgICAgICAgICAgQjEgLS0+IEIyCiAgICAgICAgZW5kCiAgICBlbmQKCiAgICBCIC0tIFN0ZXAgMSAtLT4gQ1tFbmRd"
                }
        - log:
            message: ${body}
        - to:
            uri: vertx-websocket
            parameters:
              host: localhost
              path: diagram
              port: "8100"
              sendToAll: true

- route:
    id: Dashboard connect
    from:
      uri: vertx-websocket
      parameters:
        host: localhost
        path: diagram
        port: "{{camel.server.port}}"
      steps:
        - log:
            message: "conexion to diagram server: ${body}"
# - route:
#     id: send-diagram-to-dashboard
#     description: send diagram to dashboard
#     from:
#       uri: platform-http
#       parameters:
#         path: /dashboard/diagram
#       steps:
#         - convertBodyTo:
#             type: String
#         - log:
#             message: "sending to dashboard: invoiceid: ${header.invoiceid}
#               diagram:\\n${body}"
#         - marshal:
#             base64:
#               lineLength: "5000"
#               lineSeparator: ""
#               urlSafe: false
#             variableReceive: diagram
#         - setBody:
#             expression:
#               simple:
#                 expression: |-
#                   {
#                   	"id":"${header.invoiceid}",
#                   	"diagram": "${variable.diagram}"
#                   }
#         - log:
#             message: "Send event diagram: ${body}"
#         - setHeader:
#             expression:
#               simple:
#                 expression: GET
#             name: CamelInfinispanOperation
#         - setHeader:
#             expression:
#               simple:
#                 expression: ${jq(.id)}
#                 resultType: java.lang.String
#             name: CamelInfinispanKey
#         - to:
#             uri: infinispan-embedded
#             parameters:
#               cacheName: default
#             variableReceive: get-cache
#         - log:
#             message: "check cache: ${variable.get-cache}"
#         - choice:
#             id: choice-4481
#             otherwise:
#               id: otherwise-3101
#               steps:
#                 - log:
#                     message: ignoring diagram ${body}
#             when:
#               - id: when-1301
#                 steps:
#                   - log:
#                       id: log-1123
#                       message: ignoring diagram, no cache entry found.
#                   - log:
#                       message: sending to diagram monitor
#                   - to:
#                       uri: vertx-websocket
#                       parameters:
#                         host: localhost
#                         path: diagram
#                         port: "{{camel.server.port}}"
#                         sendToAll: true
#                 simple:
#                   expression: ${variable.get-cache} == null
#               - id: when-1344
#                 steps:
#                   - log:
#                       message: sending to dashboard
#                   - to:
#                       uri: vertx-websocket
#                       parameters:
#                         host: localhost
#                         port: "{{camel.server.port}}"
#                         sendToAll: true
#                   - setHeader:
#                       expression:
#                         simple:
#                           expression: REMOVE
#                       name: CamelInfinispanOperation
#                   - to:
#                       uri: infinispan-embedded
#                       parameters:
#                         cacheName: default
#                       variableReceive: remove-cache
#                   - log:
#                       message: cache entry removed ${body}
#                 simple:
#                   expression: ${jq(variable:get-cache, .status)} == "approved"


