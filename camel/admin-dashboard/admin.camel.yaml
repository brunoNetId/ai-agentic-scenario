- route:
    id: to-dashboard
    from:
      description: to-dashboard
      uri: direct
      parameters:
        name: to-dashboard
      steps:
        - to:
            uri: vertx-websocket
            parameters:
              host: localhost
              port: "{{camel.server.port}}"
              sendToAll: true
        - log: ${body}
- route:
    id: Dashboard action
    from:
      id: from-1898
      uri: vertx-websocket
      parameters:
        host: localhost
        port: "{{camel.server.port}}"
      steps:
        - log:
            message: "from dashboard: ${body}"
        - choice:
            id: choice-1833
            otherwise:
              id: otherwise-3516
              steps:
                - log:
                    id: log-2220
                    message: lets reject
            when:
              - id: when-4140
                steps:
                  - log:
                      id: log-1250
                      message: let's approve
                  - to:
                      id: to-3603
                      uri: direct
                      parameters:
                        name: approve
                expression:
                  jq:
                    expression: .action == "approve"
- route:
    id: send-diagram-to-dashboard
    description: send diagram to dashboard
    from:
      uri: platform-http
      parameters:
        path: /dashboard/diagram
      steps:
        - convertBodyTo:
            type: String
        - log:
            message: "sending to dashboard: invoiceid: ${header.invoiceid}
              diagram:\\n${body}"
        - setVariable:
            name: summary
            simple:
              expression: ${body.split('subgraph .*\[')[1].split('\]')[0]}
        - marshal:
            base64:
              lineLength: "5000"
              lineSeparator: ""
              urlSafe: false
            variableReceive: diagram
        - setBody:
            expression:
              simple:
                expression: |-
                  {
                  	"id":"${header.invoiceid}",
                    "summary": "${variable.summary}",
                  	"diagram": "${variable.diagram}"
                  }
        - log:
            message: "Send event diagram: ${body}"
        - setHeader:
            expression:
              simple:
                expression: GET
            name: CamelInfinispanOperation
        - setHeader:
            expression:
              simple:
                expression: ${jq(.id)}
                resultType: java.lang.String
            name: CamelInfinispanKey
        - to:
            uri: infinispan-embedded
            parameters:
              cacheName: default
            variableReceive: get-cache
        - log:
            message: "check cache: ${variable.get-cache}"
        - choice:
            id: choice-4481
            otherwise:
              id: otherwise-3101
              steps:
                - log:
                    message: send to diagram dashboard:${body}
                - to:
                    uri: vertx-websocket
                    parameters:
                      host: localhost
                      path: diagram
                      port: "{{camel.server.port}}"
                      sendToAll: true
            when:
              - id: when-1301
                steps:
                  - log:
                      id: log-1123
                      message: ignoring diagram, no cache entry found.
                  - to:
                      uri: vertx-websocket
                      parameters:
                        host: localhost
                        path: diagram
                        port: "{{camel.server.port}}"
                        sendToAll: true
                simple:
                  expression: ${variable.get-cache} == null
              - id: when-1344
                steps:
                  - log:
                      message: sending to dashboard
                  - multicast:
                      steps:
                        - to:
                            uri: vertx-websocket
                            parameters:
                              host: localhost
                              port: "{{camel.server.port}}"
                              sendToAll: true
                        - to:
                            uri: vertx-websocket
                            parameters:
                              host: localhost
                              path: diagram
                              port: "{{camel.server.port}}"
                              sendToAll: true
                  - setHeader:
                      expression:
                        simple:
                          expression: REMOVE
                      name: CamelInfinispanOperation
                  - to:
                      uri: infinispan-embedded
                      parameters:
                        cacheName: default
                      variableReceive: remove-cache
                  - log:
                      message: cache entry removed ${body}
                simple:
                  expression: ${jq(variable:get-cache, .status)} == "approved"
- route:
    id: send-info-to-dashboard
    description: send info to dashboard
    from:
      uri: platform-http
      parameters:
        path: /dashboard/send
      steps:
        - convertBodyTo:
            type: String
        - setHeader:
            expression:
              simple:
                expression: ${body}
            name: CamelInfinispanValue
        - setHeader:
            expression:
              simple:
                expression: ${jq(.invoiceid)}
                resultType: java.lang.String
            name: CamelInfinispanKey
        - to:
            uri: log
            parameters:
              loggerName: putCache
              showHeaders: true
        - to:
            uri: infinispan-embedded
            parameters:
              cacheName: default
            variableReceive: cache-result
        - setBody:
            id: setBody-3946
            expression:
              simple:
                expression: |-
                  {
                  	"id": "${jq(.invoiceid)}",
                  	"summary": "${jq(.summary)}",
                  	"executionPlan": ${jq(.resolution)}
                  }
        - log:
            message: "sending to dashboard: ${body}"
        - to:
            description: to-dashboard
            uri: direct
            parameters:
              name: to-dashboard
- route:
    id: call-agent
    from:
      uri: direct
      parameters:
        name: call-agent
      steps:
        - to:
            uri: http
            parameters:
              httpUri: localhost:8090/camel/agent
- route:
    id: approve
    from:
      uri: direct
      parameters:
        name: approve
      steps:
        - setVariable:
            id: setVariable-1144
            expression:
              jq:
                expression: .id
            name: invoiceid
        - setHeader:
            expression:
              simple:
                expression: GET
            name: CamelInfinispanOperation
        - setHeader:
            expression:
              simple:
                expression: ${jq(.id)}
                resultType: java.lang.String
            name: CamelInfinispanKey
        - to:
            id: to-2428
            uri: log
            parameters:
              loggerName: getCache
              showHeaders: true
        - to:
            uri: infinispan-embedded
            parameters:
              cacheName: default
        - log:
            message: "from cache: ${body}"
        - setBody:
            jq:
              expression: .status="approved"
              resultType: String
        - log:
            message: "approved: ${body}"
        - setHeader:
            name: CamelInfinispanValue
            simple:
              expression: ${body}
        - setHeader:
            name: CamelInfinispanOperation
            simple:
              expression: REPLACE
        - to:
            id: updateCache
            uri: log
            parameters:
              loggerName: InfoLogger
              showAll: true
        - to:
            uri: infinispan-embedded
            parameters:
              cacheName: default
            variableReceive: operation-put
        - log:
            message: "from cache: ${body}"
        - log:
            message: "input resoltion fields: ${body}"
        - setBody:
            expression:
              jq:
                expression: .resolution | join(" ")
        - to:
            uri: direct
            parameters:
              name: call-agent
        - log:
            message: "response from agent: ${body}"
        - setBody:
            id: setBody-3082
            expression:
              simple:
                expression: |-
                  {
                  	"id":"${variable.invoiceid}",
                  	"status":"completed",
                  	"executionSummary": ${body}
                  }
        - to:
            id: to-2477
            uri: vertx-websocket
            parameters:
              host: localhost
              port: "{{camel.server.port}}"
