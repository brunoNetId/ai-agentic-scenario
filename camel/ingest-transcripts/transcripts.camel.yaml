- beans:
    - name: myaggregator
      type: org.apache.camel.processor.aggregate.StringAggregationStrategy
- route:
    id: generate
    from:
      id: from-4275
      uri: direct
      parameters:
        name: generate
      steps:
        - to:
            id: to-3747
            uri: language
            parameters:
              languageName: constant
              resourceUri: resource:file:samples/customer2.txt
            disabled: true
        - setBody:
            id: setBody-2183
            disabled: true
            expression:
              simple:
                expression: |-
                  ${body}

                  ${variable.categories}
        - log:
            id: log-3262
            message: ${body}
        - stop:
            id: stop-3907
            disabled: true
        - process:
            id: process-3957
            ref: createSummary
        - to:
            uri: langchain4j-chat
            parameters:
              chatId: summary
              chatOperation: CHAT_MULTIPLE_MESSAGES
            disabled: true
            variableReceive: summary
        - to:
            id: to-3111
            uri: langchain4j-tools
            parameters:
              tags: all
              toolId: summary
            disabled: false
            variableReceive: summary
        - log:
            id: log-5080
            message: "summary is: ${variable.summary}"
        - removeHeaders:
            id: removeHeaders-3061
            disabled: true
            pattern: "*"
        - setHeader:
            id: setHeader-1636
            disabled: true
            expression:
              constant:
                expression: text/*
            name: CamelAwsS3ContentType
        - toD:
            uri: minio
            parameters:
              accessKey: minio
              bucketName: generated
              endpoint: https://minio-api-demo.apps.cluster-8lqf8.8lqf8.sandbox2778.opentlc.com
              keyName: ${variable.filename}_${date:now:HH-mm-ss}.txt
              secretKey: minio123
            disabled: true
            variableSend: conversation
        - toD:
            uri: minio
            parameters:
              accessKey: minio
              bucketName: generated
              endpoint: https://minio-api-demo.apps.cluster-8lqf8.8lqf8.sandbox2778.opentlc.com
              keyName: ${variable.filename}summary_${date:now:HH-mm-ss}.txt
              secretKey: minio123
            disabled: true
            variableSend: summary
- route:
    id: route-1543
    from:
      id: from-1127
      uri: timer
      parameters:
        period: "1000"
        repeatCount: "1"
        timerName: template
      steps:
        - stop:
            id: stop-1547
- route:
    id: to-admin
    from:
      uri: direct
      parameters:
        name: to-admin
      steps:
        - to:
            id: to-4267
            uri: direct
            parameters:
              name: generate
        - log:
            id: log-4176
            disabled: true
            message: ${body}
        - removeHeaders:
            pattern: "*"
        - setBody:
            expression:
              simple:
                expression: ${variable.summary}
        - to:
            uri: http
            parameters:
              httpUri: localhost:8100/dashboard/send
- route:
    id: call-agent
    from:
      id: from-1080
      uri: direct
      parameters:
        name: call-agent
      steps:
        - to:
            id: to-2685
            uri: http
            parameters:
              httpUri: localhost:8080/camel/chat
- route:
    id: route-1582
    description: tool-get-interests
    from:
      uri: langchain4j-tools
      parameters:
        description: extract from invoice categories of products customer is interested in
        parameter.invoiceid: string
        tags: all
        toolId: interests
      steps:
        - setBody:
            expression:
              simple:
                expression: please tell me the types of products in invoice ${header.invoiceid}
        - to:
            uri: direct
            parameters:
              name: call-agent
        - log:
            message: ${body}
- route:
    id: ingestor
    from:
      uri: aws2-s3
      parameters:
        accessKey: minio
        bucketNameOrArn: transcripts
        forcePathStyle: true
        overrideEndpoint: true
        region: ap-south-2
        secretKey: minio123
        uriEndpointOverride: https://minio-api-demo.apps.cluster-8lqf8.8lqf8.sandbox2778.opentlc.com
      steps:
        - log:
            id: log-2491
            message: ${body}
        - to:
            id: to-1077
            uri: direct
            parameters:
              name: to-admin
            variableReceive: to-admin-result
        - removeHeaders:
            id: removeHeaders-6404
            disabled: true
            pattern: "*"
        - to:
            uri: direct
            parameters:
              name: get-doc-urls
            disabled: true
- route:
    id: route-2336
    description: tool-think
    from:
      uri: langchain4j-tools
      parameters:
        description: Use the tool to think about something. It will not obtain new
          information or change the database, but just append the thought to the
          log. Use it when complex reasoning or some cache memory is needed.
        parameter.thought: string
        tags: all
        toolId: think
      steps:
        - setBody:
            expression:
              simple:
                expression: noted
        - log:
            message: "think: ${body}"
