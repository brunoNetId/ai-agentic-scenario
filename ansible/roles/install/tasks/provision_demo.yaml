- name:  ({{ demo_namespace }}) Evaluate namespace if not exists
  k8s:
    api_version: v1
    kind: Namespace
    name:  "{{ demo_namespace }}"
    state: present

- name: Deploy S3 Storage
  k8s:
    namespace: "{{ demo_namespace }}"
    state: present
    resource_definition: "{{ lookup('template', 's3-storage.yaml.j2') }}"

- name: Wait until Minio is active
  k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ demo_namespace }}"
    name: minio
  register: r_minio
  retries: 30
  delay: 10
  until:
   - r_minio.resources is defined
   - r_minio.resources | length | int > 0
   - r_minio.resources[0].status is defined
   - (r_minio.resources[0].status.conditions | selectattr('type','equalto','Available') | list | first).status == "True"

- name: ({{ demo_namespace }}) Create INGEST bucket
  amazon.aws.s3_bucket:
    endpoint_url: "https://minio-api-{{ demo_namespace }}.{{ route_subdomain }}"
    aws_access_key: "minio"
    aws_secret_key: "minio123"
    name: "ingest"
    state: present

- name: ({{ demo_namespace }}) Create INVOICES bucket
  amazon.aws.s3_bucket:
    endpoint_url: "https://minio-api-{{ demo_namespace }}.{{ route_subdomain }}"
    aws_access_key: "minio"
    aws_secret_key: "minio123"
    name: "invoices"
    state: present

- name: ({{ demo_namespace }}) Create OUTBOX bucket
  amazon.aws.s3_bucket:
    endpoint_url: "https://minio-api-{{ demo_namespace }}.{{ route_subdomain }}"
    aws_access_key: "minio"
    aws_secret_key: "minio123"
    name: "outbox"
    state: present

- name: Deploy Docling Server
  k8s:
    namespace: "{{ demo_namespace }}"
    state: present
    resource_definition: "{{ lookup('template', 'docling-server.yaml.j2') }}"
